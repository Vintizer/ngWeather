{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/guards/users.guard.ts","webpack:///./src/app/hotels.service.ts","webpack:///./src/app/services/api.interceptor.ts","webpack:///./src/app/services/favorite-service.service.ts","webpack:///./src/app/store/actions/favorite-hotel.actions.ts","webpack:///./src/app/store/actions/hotel.actions.ts","webpack:///./src/app/store/actions/router.actions.ts","webpack:///./src/app/store/effects/favorite-hotel.effects.ts","webpack:///./src/app/store/effects/hotel.effects.ts","webpack:///./src/app/store/effects/router.effects.ts","webpack:///./src/app/store/reducers/custom-route-serializer.ts","webpack:///./src/app/store/reducers/favorite-hotel.reducer.ts","webpack:///./src/app/store/reducers/hotel.reducer.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/contact/contact.module\": [\n\t\t\"./src/app/modules/contact/contact.module.ts\",\n\t\t\"modules-contact-contact-module\"\n\t],\n\t\"./modules/hotels.module\": [\n\t\t\"./src/app/modules/hotels.module.ts\",\n\t\t\"modules-hotels-module\"\n\t],\n\t\"./modules/users/users.module\": [\n\t\t\"./src/app/modules/users/users.module.ts\",\n\t\t\"modules-users-users-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { ContactUsComponent } from './components/contact-us/contact-us.component';\r\nimport { ContactDeactivateGuard } from './guards/contact-deactivate.guard';\r\nimport { UsersGuard } from './guards/users.guard';\r\nimport { HotelCommentsComponent } from './components/hotel-comments/hotel-comments.component';\r\nimport { HotelDetailsComponent } from './components/hotel-details/hotel-details.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'hotels',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'about',\r\n    component: AboutComponent\r\n  },\r\n  {\r\n    path: 'hotels',\r\n    loadChildren: './modules/hotels.module#HotelsModule'\r\n  },\r\n  {\r\n    path: 'users',\r\n    loadChildren: './modules/users/users.module#UsersModule',\r\n    canActivate: [UsersGuard]\r\n  },\r\n  {\r\n    path: 'contact',\r\n    loadChildren: './modules/contact/contact.module#ContactModule'\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      enableTracing: false,\r\n      paramsInheritanceStrategy: 'always'\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<simple-notifications></simple-notifications>\\r\\n<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { RouterEffects } from './store/effects/router.effects';\r\nimport { CustomSerializer } from './store/reducers/custom-route-serializer';\r\nimport { FavoriteHotelEffects } from './store/effects/favorite-hotel.effects';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { ParamInterceptor } from './services/api.interceptor';\r\nimport { metaReducers, reducers } from './store/reducers';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { HotelEffects } from './store/effects/hotel.effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutComponent,\r\n    NotFoundComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SimpleNotificationsModule.forRoot(),\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\r\n    EffectsModule.forRoot([HotelEffects, FavoriteHotelEffects, RouterEffects]),\r\n    StoreRouterConnectingModule.forRoot({\r\n      serializer: CustomSerializer\r\n    })\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ParamInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <p>\\r\\n      Далеко-далеко за словесными горами в стране гласных и согласных живут\\r\\n      рыбные тексты. Продолжил единственное маленький страну жизни\\r\\n      парадигматическая до, выйти если они запятых океана текстами грустный\\r\\n      вопроса она подпоясал рекламных собрал залетают грамматики на берегу\\r\\n      переписали над но родного решила? Языком которое сбить последний путь\\r\\n      всеми, его великий мир несколько свою за прямо домах которой все коварный\\r\\n      бросил переписали ручеек она единственное! Образ вопрос подзаголовок\\r\\n      проектах всемогущая решила ему приставка страна но. Своих на берегу\\r\\n      текстами свой имени, гор маленькая безорфографичный большого составитель\\r\\n      речью родного меня вопрос диких вопроса, путь инициал? Снова, буквенных.\\r\\n      Решила последний лучше эта запятой рукопись. Рекламных сбить ручеек толку,\\r\\n      подпоясал инициал страна города предложения пустился, по всей заголовок\\r\\n      безопасную! Несколько переулка это запятых она языком взгляд его правилами\\r\\n      рот свой дал океана, первую агентство инициал себя жизни наш решила,\\r\\n      заманивший подпоясал города то! Ее, живет предложения коварный вскоре\\r\\n      большой эта образ, домах пунктуация переписывается гор строчка запятой то\\r\\n      грамматики путь. Однажды лучше взобравшись по всей, путь которой гор на\\r\\n      берегу, повстречался переписали родного, грустный ты правилами залетают то\\r\\n      назад дороге свой не! Большого даже алфавит мир встретил повстречался\\r\\n      заглавных коварный маленький страну всеми запятой обеспечивает,\\r\\n      подзаголовок если? Вдали, вопроса своих до лучше, они снова послушавшись\\r\\n      ему обеспечивает продолжил предупредила взгляд гор то запятых одна\\r\\n      переулка! Знаках, инициал города? Меня, безорфографичный напоивший жизни,\\r\\n      своих текстов заголовок первую вскоре вопрос большого составитель речью\\r\\n      которой силуэт коварный маленький правилами текстами переписали снова.\\r\\n      Запятой на берегу вскоре власти не но вопроса ручеек города? Вопрос речью\\r\\n      он но снова первую скатился? Все свой злых дорогу, семантика реторический\\r\\n      своего наш ты курсивных гор назад что подзаголовок над диких, домах щеке\\r\\n      обеспечивает встретил вопрос его! Обеспечивает запятой агентство проектах\\r\\n      переписывается, продолжил пустился предупредила текстами, ведущими\\r\\n      необходимыми до, дорогу возвращайся lorem! Безорфографичный дал страну\\r\\n      приставка своего это одна запятых агентство алфавит повстречался даль ты\\r\\n      языком, не, всеми напоивший моей продолжил снова дороге.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".active {\\r\\n    background-color: rgb(139, 233, 236)\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzksIDIzMywgMjM2KVxyXG59Il19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/hotels']\\\">Hotels</a>\\r\\n  \\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/hotels']\\\" routerLinkActive=\\\"active\\\">Home</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"isAdminVal\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/users']\\\" routerLinkActive=\\\"active\\\">Users</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/contact']\\\" routerLinkActive=\\\"active\\\">Contact us</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/about']\\\" routerLinkActive=\\\"active\\\">About us</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  public isAdminVal: boolean;\r\n  public constructor() { }\r\n\r\n  public ngOnInit(): void {\r\n    this.isAdminVal = Boolean(sessionStorage.getItem('isAdmin'));\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n Извините, такой страницы у нас нет\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { IState } from 'src/app/store/reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport * as RouterActions from '../store/actions/router.actions';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersGuard implements CanActivate {\r\n  public isAdminVal: boolean = Boolean(sessionStorage.getItem('isAdmin'));\r\n  public constructor(private store: Store<IState>) {}\r\n  public canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.isAdminVal) {\r\n      return true;\r\n    } else {\r\n      this.store.dispatch(\r\n        new RouterActions.Go({\r\n          path: [''],\r\n          extras: { replaceUrl: false }\r\n        })\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { environment } from './../environments/environment';\r\nimport { IHotel, IHotelComment } from './models/hotel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HotelsService {\r\n  private configUrl: string = environment.configUrl;\r\n  public constructor(private http: HttpClient) {}\r\n  public getHotelsObservable(\r\n    page: number = 0,\r\n    limit: number = 20\r\n  ): Observable<IHotel[]> {\r\n    return this.http.get<IHotel[]>(\r\n      `${this.configUrl}hotels?_page=${page + 1}&_limit=${limit}`\r\n    );\r\n  }\r\n  public getHotelById(id: string): Observable<IHotel> {\r\n    return this.http.get(`${this.configUrl}hotels/${id}`) as Observable<IHotel>;\r\n  }\r\n  public getCommentsById(id: string): Observable<IHotelComment[]> {\r\n    return this.http.get(\r\n      `${this.configUrl}comments?hotel_id=${id}`\r\n    ) as Observable<IHotelComment[]>;\r\n  }\r\n  public getAllHotels(): Observable<IHotel[]> {\r\n    return this.http.get<IHotel[]>(`${this.configUrl}hotels`);\r\n  }\r\n  public removeHotel(id: number): Observable<{}> {\r\n    return this.http.delete(`${this.configUrl}hotels/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ParamInterceptor implements HttpInterceptor {\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.method === 'DELETE') {\r\n      const authToken: string = sessionStorage.getItem('isAdmin');\r\n      if (!authToken) {\r\n        return next.handle(req);\r\n      }\r\n      const updatedRequest: HttpRequest<any> = req.clone({\r\n        headers: req.headers.set('Authorization', authToken)\r\n      });\r\n      return next.handle(updatedRequest);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { environment } from './../../environments/environment';\r\nimport {\r\n  IFavoriteHotel,\r\n  IFavoriteView,\r\n  IHotelView,\r\n  IJsonResponse,\r\n  ResponseType\r\n} from './../models/hotel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FavoriteService {\r\n  private configUrl: string = environment.configUrl;\r\n\r\n  public constructor(private http: HttpClient) {\r\n  }\r\n  public addFavorite(hotel: IHotelView): Observable<IFavoriteView> {\r\n    const newFavoriteHotel: IFavoriteView = Object.assign({\r\n      ...hotel,\r\n      voted: 1\r\n    });\r\n    return this.http.post<IFavoriteView>(\r\n      `${this.configUrl}favorites/`,\r\n      newFavoriteHotel\r\n    );\r\n  }\r\n  public voteFavorite(favHotel: IFavoriteView): Observable<IFavoriteView> {\r\n    return this.http.patch<IFavoriteView>(\r\n      `${this.configUrl}favorites/${favHotel.id}`,\r\n      {\r\n        voted: favHotel.voted + 1\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFavorites(): Observable<IFavoriteView[]> {\r\n    return this.http.get<IFavoriteView[]>(`${this.configUrl}favorites`);\r\n  }\r\n  public removeFromFavorites(id: number): Observable<{}> {\r\n    return this.http.delete(`${this.configUrl}favorites/${id}`);\r\n  }\r\n}\r\n","import { IFavoriteView, IHotelView } from './../../models/hotel';\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport enum FavoriteHotelActionTypes {\r\n  LoadFavoriteHotels = '[FavoriteHotel] Load FavoriteHotels',\r\n  LoadFavoriteHotelsSuccess = '[FavoriteHotel] Load FavoriteHotels Success',\r\n  LoadFavoriteHotelsFailure = '[FavoriteHotel] Load FavoriteHotels Failure',\r\n\r\n  AddFavoriteHotels = '[FavoriteHotel] Add FavoriteHotels',\r\n  AddFavoriteHotelsSuccess = '[FavoriteHotel] Add FavoriteHotels Success',\r\n  AddFavoriteHotelsFailure = '[FavoriteHotel] Add FavoriteHotels Failure',\r\n\r\n  VoteFavoriteHotels = '[FavoriteHotel] Vote FavoriteHotels',\r\n  VoteFavoriteHotelsSuccess = '[FavoriteHotel] Vote FavoriteHotels Success',\r\n  VoteFavoriteHotelsFailure = '[FavoriteHotel] Vote FavoriteHotels Failure',\r\n\r\n  RemoveFavoriteHotels = '[FavoriteHotel] Remove FavoriteHotels',\r\n  RemoveFavoriteHotelsSuccess = '[FavoriteHotel] Remove FavoriteHotels Success',\r\n  RemoveFavoriteHotelsFailure = '[FavoriteHotel] Remove FavoriteHotels Failure'\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadFavoriteHotels implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.LoadFavoriteHotels =\r\n    FavoriteHotelActionTypes.LoadFavoriteHotels;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadFavoriteHotelsSuccess implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.LoadFavoriteHotelsSuccess =\r\n    FavoriteHotelActionTypes.LoadFavoriteHotelsSuccess;\r\n  public constructor(public payload: IFavoriteView[]) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadFavoriteHotelsFailure implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.LoadFavoriteHotelsFailure =\r\n    FavoriteHotelActionTypes.LoadFavoriteHotelsFailure;\r\n  public constructor(public payload: string) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class AddFavoriteHotels implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.AddFavoriteHotels =\r\n    FavoriteHotelActionTypes.AddFavoriteHotels;\r\n  public constructor(public payload: IHotelView) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class AddFavoriteHotelsSuccess implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.AddFavoriteHotelsSuccess =\r\n    FavoriteHotelActionTypes.AddFavoriteHotelsSuccess;\r\n  public constructor(public payload: IFavoriteView) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class AddFavoriteHotelsFailure implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.AddFavoriteHotelsFailure =\r\n    FavoriteHotelActionTypes.AddFavoriteHotelsFailure;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class VoteFavoriteHotels implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.VoteFavoriteHotels =\r\n    FavoriteHotelActionTypes.VoteFavoriteHotels;\r\n  public constructor(public payload: number) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class VoteFavoriteHotelsSuccess implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.VoteFavoriteHotelsSuccess =\r\n    FavoriteHotelActionTypes.VoteFavoriteHotelsSuccess;\r\n  public constructor(public payload: IFavoriteView) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class VoteFavoriteHotelsFailure implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.VoteFavoriteHotelsFailure =\r\n    FavoriteHotelActionTypes.VoteFavoriteHotelsFailure;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveFavoriteHotels implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.RemoveFavoriteHotels =\r\n    FavoriteHotelActionTypes.RemoveFavoriteHotels;\r\n    public constructor(public payload: number) {}\r\n  }\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveFavoriteHotelsSuccess implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.RemoveFavoriteHotelsSuccess =\r\n    FavoriteHotelActionTypes.RemoveFavoriteHotelsSuccess;\r\n  public constructor(public payload: number) {}\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveFavoriteHotelsFailure implements Action {\r\n  public readonly type: FavoriteHotelActionTypes.RemoveFavoriteHotelsFailure =\r\n    FavoriteHotelActionTypes.RemoveFavoriteHotelsFailure;\r\n  public constructor(public payload: string) {}\r\n}\r\nexport type FavoriteHotelActions =\r\n  | LoadFavoriteHotels\r\n  | LoadFavoriteHotelsSuccess\r\n  | LoadFavoriteHotelsFailure\r\n  | AddFavoriteHotels\r\n  | AddFavoriteHotelsSuccess\r\n  | AddFavoriteHotelsFailure\r\n  | VoteFavoriteHotels\r\n  | VoteFavoriteHotelsSuccess\r\n  | VoteFavoriteHotelsFailure\r\n  | RemoveFavoriteHotels\r\n  | RemoveFavoriteHotelsSuccess\r\n  | RemoveFavoriteHotelsFailure;\r\n","import { IHotel } from './../../models/hotel';\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport enum HotelActionTypes {\r\n  LoadHotels = '[Hotel] Load Hotels',\r\n  LoadHotelsSuccess = '[Hotel] Load Hotels Success',\r\n  LoadHotelsError = '[Hotel] Load Hotels Error',\r\n  LoadHotel = '[Hotel] Load Hotel',\r\n  LoadHotelSuccess = '[Hotel] Load Hotel Success',\r\n  LoadHotelError = '[Hotel] Load Hotel Error',\r\n  LoadAllHotels = '[Hotel] Load All Hotels',\r\n  LoadAllHotelsSuccess = '[Hotel] Load Hotels All Success',\r\n  LoadAllHotelsError = '[Hotel] Load Hotels All Error',\r\n  RemoveHotels = '[Hotel] Remove Hotels',\r\n  RemoveHotelsSuccess = '[Hotel] Remove Hotels Success',\r\n  RemoveHotelsError = '[Hotel] Remove Hotels Error',\r\n  SetTextFilter = '[Hotel] Set Text Filter',\r\n  SetStarFilter = '[Hotel] Set Star Filter',\r\n  SetActiveHotel = '[Hotel] Set Active Hotel'\r\n}\r\ninterface IPageHotels {\r\n  page: number;\r\n  limit: number;\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveHotels implements Action {\r\n  public readonly type: HotelActionTypes.RemoveHotels =\r\n    HotelActionTypes.RemoveHotels;\r\n  public constructor(public payload: number) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveHotelsSuccess implements Action {\r\n  public readonly type: HotelActionTypes.RemoveHotelsSuccess =\r\n    HotelActionTypes.RemoveHotelsSuccess;\r\n  public constructor(public payload: number) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class RemoveHotelsError implements Action {\r\n  public readonly type: HotelActionTypes.RemoveHotelsError =\r\n    HotelActionTypes.RemoveHotelsError;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotels implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotels =\r\n    HotelActionTypes.LoadHotels;\r\n  public constructor(public payload: IPageHotels = { page: 0, limit: 20 }) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotelsSuccess implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotelsSuccess =\r\n    HotelActionTypes.LoadHotelsSuccess;\r\n  public constructor(public payload: IHotel[]) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotelsError implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotelsError =\r\n    HotelActionTypes.LoadHotelsError;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotel implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotel = HotelActionTypes.LoadHotel;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotelSuccess implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotelSuccess =\r\n    HotelActionTypes.LoadHotelSuccess;\r\n  public constructor(public payload: IHotel) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadHotelError implements Action {\r\n  public readonly type: HotelActionTypes.LoadHotelError =\r\n    HotelActionTypes.LoadHotelError;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadAllHotels implements Action {\r\n  public readonly type: HotelActionTypes.LoadAllHotels =\r\n    HotelActionTypes.LoadAllHotels;\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadAllHotelsSuccess implements Action {\r\n  public readonly type: HotelActionTypes.LoadAllHotelsSuccess =\r\n    HotelActionTypes.LoadAllHotelsSuccess;\r\n  public constructor(public payload: IHotel[]) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LoadAllHotelsError implements Action {\r\n  public readonly type: HotelActionTypes.LoadAllHotelsError =\r\n    HotelActionTypes.LoadAllHotelsError;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SetTextFilter implements Action {\r\n  public readonly type: HotelActionTypes.SetTextFilter =\r\n    HotelActionTypes.SetTextFilter;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SetStarFilter implements Action {\r\n  public readonly type: HotelActionTypes.SetStarFilter =\r\n    HotelActionTypes.SetStarFilter;\r\n  public constructor(public payload: string) {}\r\n}\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class SetActiveHotel implements Action {\r\n  public readonly type: HotelActionTypes.SetActiveHotel =\r\n    HotelActionTypes.SetActiveHotel;\r\n  public constructor(public payload: number) {}\r\n}\r\n\r\nexport type HotelActions =\r\n  | LoadHotels\r\n  | LoadHotelsSuccess\r\n  | LoadHotelsError\r\n  | LoadHotel\r\n  | LoadHotelSuccess\r\n  | LoadHotelError\r\n  | LoadAllHotels\r\n  | LoadAllHotelsSuccess\r\n  | LoadAllHotelsError\r\n  | RemoveHotels\r\n  | RemoveHotelsSuccess\r\n  | RemoveHotelsError\r\n  | SetStarFilter\r\n  | SetTextFilter\r\n  | SetActiveHotel;\r\n","import { Action } from '@ngrx/store';\r\nimport { NavigationExtras } from '@angular/router';\r\n\r\nexport const GO = '[Router] Go';\r\nexport const BACK = '[Router] Back';\r\nexport const FORWARD = '[Router] Forward';\r\n\r\nexport class Go implements Action {\r\n  readonly type = GO;\r\n\r\n  constructor(\r\n    public payload: {\r\n      path: any[];\r\n      query?: object;\r\n      extras?: NavigationExtras;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class Back implements Action {\r\n  readonly type = BACK;\r\n}\r\n\r\nexport class Forward implements Action {\r\n  readonly type = FORWARD;\r\n}\r\n\r\nexport type Actions = Go | Back | Forward;\r\n","import { NotificationsService } from 'angular2-notifications';\r\nimport { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  find,\r\n  map,\r\n  mergeMap,\r\n  switchMap,\r\n  tap\r\n} from 'rxjs/operators';\r\n\r\nimport { IFavoriteView, IHotelView } from './../../models/hotel';\r\nimport { FavoriteService } from './../../services/favorite-service.service';\r\nimport {\r\n  AddFavoriteHotelsFailure,\r\n  AddFavoriteHotelsSuccess,\r\n  FavoriteHotelActionTypes,\r\n  LoadFavoriteHotelsFailure,\r\n  LoadFavoriteHotelsSuccess,\r\n  RemoveFavoriteHotelsFailure,\r\n  RemoveFavoriteHotelsSuccess,\r\n  VoteFavoriteHotelsFailure,\r\n  VoteFavoriteHotelsSuccess\r\n} from './../actions/favorite-hotel.actions';\r\nimport { IState } from '../reducers';\r\n\r\n@Injectable()\r\nexport class FavoriteHotelEffects {\r\n  @Effect()\r\n  public loadFavorites$: Observable<\r\n    LoadFavoriteHotelsSuccess | LoadFavoriteHotelsFailure\r\n  > = this.actions$.pipe(\r\n    ofType(FavoriteHotelActionTypes.LoadFavoriteHotels),\r\n    mergeMap(() =>\r\n      this.favService.getFavorites().pipe(\r\n        map((hotels: IFavoriteView[]) => new LoadFavoriteHotelsSuccess(hotels)),\r\n        catchError((err: string) => of(new LoadFavoriteHotelsFailure(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public addToFavorites$: Observable<\r\n    AddFavoriteHotelsSuccess | AddFavoriteHotelsFailure\r\n  > = this.actions$.pipe(\r\n    ofType(FavoriteHotelActionTypes.AddFavoriteHotels),\r\n    mergeMap(({ payload: hotel }: { payload: IHotelView }) =>\r\n      this.favService.addFavorite(hotel).pipe(\r\n        tap(() => this.addFavoriteNotification.bind(this)()),\r\n        map(\r\n          (favHotel: IFavoriteView) => new AddFavoriteHotelsSuccess(favHotel)\r\n        ),\r\n        catchError((err: string) => of(new AddFavoriteHotelsFailure(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public voteFavorite$: Observable<\r\n    VoteFavoriteHotelsSuccess | VoteFavoriteHotelsFailure\r\n  > = this.actions$.pipe(\r\n    ofType(FavoriteHotelActionTypes.VoteFavoriteHotels),\r\n    mergeMap(({ payload: hotelId }: { payload: number }) =>\r\n      this.store.select('favoriteHotel', 'data').pipe(\r\n        switchMap((favHotels: IFavoriteView[]) => from(favHotels)),\r\n        find((favHotel: IFavoriteView) => favHotel.id === hotelId),\r\n        switchMap((hotel: IFavoriteView) =>\r\n          this.favService.voteFavorite(hotel).pipe(\r\n        tap(() => this.voteFavoriteNotification.bind(this)()),\r\n            map(\r\n              (favHotel: IFavoriteView) =>\r\n                new VoteFavoriteHotelsSuccess(favHotel)\r\n            ),\r\n            catchError((err: string) => of(new VoteFavoriteHotelsFailure(err)))\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public removeFromFavorites$: Observable<\r\n    RemoveFavoriteHotelsSuccess | RemoveFavoriteHotelsFailure\r\n  > = this.actions$.pipe(\r\n    ofType(FavoriteHotelActionTypes.RemoveFavoriteHotels),\r\n    mergeMap(({ payload: hotelId }: { payload: number }) =>\r\n      this.favService.removeFromFavorites(hotelId).pipe(\r\n        tap(() => this.removeFavoriteNotification.bind(this)()),\r\n        map(() => new RemoveFavoriteHotelsSuccess(hotelId)),\r\n        catchError((err: string) => of(new RemoveFavoriteHotelsFailure(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  public constructor(\r\n    private actions$: Actions,\r\n    private favService: FavoriteService,\r\n    private store: Store<IState>,\r\n    private ns: NotificationsService\r\n  ) {}\r\n  public addFavoriteNotification(): void {\r\n    this.ns.success('Favorite added!', '', {\r\n      timeOut: 1000,\r\n      clickToClose: true,\r\n      animate: 'fade',\r\n      showProgressBar: false\r\n    });\r\n  }\r\n  public removeFavoriteNotification(): void {\r\n    this.ns.warn('Favorite removed!', '', {\r\n      timeOut: 1000,\r\n      clickToClose: true,\r\n      animate: 'fade',\r\n      showProgressBar: false\r\n    });\r\n  }\r\n  public voteFavoriteNotification(): void {\r\n    this.ns.info('Your vote has been counted!', '', {\r\n      timeOut: 1000,\r\n      clickToClose: true,\r\n      animate: 'fade',\r\n      showProgressBar: false\r\n    });\r\n  }\r\n}\r\n","import { RemoveFavoriteHotels } from './../actions/favorite-hotel.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\r\nimport { HotelsService } from 'src/app/hotels.service';\r\n\r\nimport { IHotel } from './../../models/hotel';\r\nimport {\r\n  HotelActions,\r\n  HotelActionTypes,\r\n  LoadAllHotelsError,\r\n  LoadAllHotelsSuccess,\r\n  LoadHotelError,\r\n  LoadHotelsError,\r\n  LoadHotelsSuccess,\r\n  LoadHotelSuccess,\r\n  RemoveHotelsError,\r\n  RemoveHotelsSuccess\r\n} from './../actions/hotel.actions';\r\nimport { IState } from '../reducers';\r\n\r\n@Injectable()\r\nexport class HotelEffects {\r\n  @Effect()\r\n  public loadHotels$: Observable<\r\n    LoadHotelsSuccess | LoadHotelsError\r\n  > = this.actions$.pipe(\r\n    ofType(HotelActionTypes.LoadHotels),\r\n    mergeMap(({ payload }) =>\r\n      this.hotelsService.getHotelsObservable(payload.page, payload.limit).pipe(\r\n        map((hotels: IHotel[]) => new LoadHotelsSuccess(hotels)),\r\n        catchError((err: string) => of(new LoadHotelsError(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public loadHotel$: Observable<\r\n    LoadHotelSuccess | LoadHotelError\r\n  > = this.actions$.pipe(\r\n    ofType(HotelActionTypes.LoadHotel),\r\n    mergeMap(({ payload }) =>\r\n      this.hotelsService.getHotelById(payload).pipe(\r\n        map((hotel: IHotel) => new LoadHotelSuccess(hotel)),\r\n        catchError((err: string) => of(new LoadHotelError(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public loadAllHotels$: Observable<\r\n    LoadAllHotelsSuccess | LoadAllHotelsError\r\n  > = this.actions$.pipe(\r\n    ofType(HotelActionTypes.LoadAllHotels),\r\n    mergeMap(() =>\r\n      this.hotelsService.getAllHotels().pipe(\r\n        map((hotels: IHotel[]) => new LoadAllHotelsSuccess(hotels)),\r\n        catchError((err: string) => of(new LoadAllHotelsError(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  public removeHotels$: Observable<\r\n    RemoveHotelsSuccess | RemoveHotelsError\r\n  > = this.actions$.pipe(\r\n    ofType(HotelActionTypes.RemoveHotels),\r\n    mergeMap(({ payload: hotelId }: { payload: number }) =>\r\n      this.hotelsService.removeHotel(hotelId).pipe(\r\n        tap(() => this.store.dispatch(new RemoveFavoriteHotels(hotelId))),\r\n        map(() => new RemoveHotelsSuccess(hotelId)),\r\n        catchError((err: string) => of(new RemoveHotelsError(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  public constructor(\r\n    private actions$: Actions<HotelActions>,\r\n    private hotelsService: HotelsService,\r\n    private store: Store<IState>\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport * as RouterActions from '../actions/router.actions';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n  @Effect({ dispatch: false })\r\n  navigate$ = this.actions$.pipe(\r\n    ofType(RouterActions.GO),\r\n    map((action: RouterActions.Go) => action.payload),\r\n    tap(({ path, query: queryParams, extras }) =>\r\n      this.router.navigate(path, { queryParams, ...extras })\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateBack$ = this.actions$.pipe(\r\n    ofType(RouterActions.BACK),\r\n    tap(() => this.location.back())\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateForward$ = this.actions$.pipe(\r\n    ofType(RouterActions.FORWARD),\r\n    tap(() => this.location.forward())\r\n  );\r\n\r\n  public constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private location: Location\r\n  ) {}\r\n}\r\n","import { Params, RouterStateSnapshot } from '@angular/router';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\n\r\nexport interface IRouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport class CustomSerializer implements RouterStateSerializer<IRouterStateUrl> {\r\n  public serialize(routerState: RouterStateSnapshot): IRouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams },\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}","import { IState } from './index';\r\nimport {\r\n  FavoriteHotelActions,\r\n  FavoriteHotelActionTypes\r\n} from './../actions/favorite-hotel.actions';\r\nimport { IFavoriteView } from './../../models/hotel';\r\nimport { Action, createSelector, MemoizedSelectorWithProps } from '@ngrx/store';\r\n\r\nexport interface IFavState {\r\n  data: IFavoriteView[];\r\n  isLoading: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const initialState: IFavState = {\r\n  data: [],\r\n  isLoading: false,\r\n  error: ''\r\n};\r\n\r\nexport function reducer(\r\n  state: IFavState = initialState,\r\n  action: FavoriteHotelActions\r\n): IFavState {\r\n  switch (action.type) {\r\n    case FavoriteHotelActionTypes.LoadFavoriteHotels:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case FavoriteHotelActionTypes.LoadFavoriteHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.LoadFavoriteHotelsFailure:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.AddFavoriteHotels:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case FavoriteHotelActionTypes.AddFavoriteHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.AddFavoriteHotelsFailure:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.VoteFavoriteHotels:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case FavoriteHotelActionTypes.VoteFavoriteHotelsSuccess:\r\n      const updatedFavHotels: IFavoriteView[] = state.data.map(\r\n        (hotel: IFavoriteView) => {\r\n          if (hotel.id === action.payload.id) {\r\n            hotel.voted++;\r\n          }\r\n          return hotel;\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        data: updatedFavHotels,\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.VoteFavoriteHotelsFailure:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.RemoveFavoriteHotels:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case FavoriteHotelActionTypes.RemoveFavoriteHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(\r\n          (hotel: IFavoriteView) => hotel.id !== action.payload\r\n        ),\r\n        isLoading: false\r\n      };\r\n    case FavoriteHotelActionTypes.RemoveFavoriteHotelsFailure:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const favHotelSelector: MemoizedSelectorWithProps<\r\n  IState,\r\n  number,\r\n  boolean\r\n> = createSelector(\r\n  (state: IState) => state.favoriteHotel.data,\r\n  (favHotels: IFavoriteView[], hotelId: number) => {\r\n    return Boolean(\r\n      favHotels.find((hotel: IFavoriteView) => hotel.id === hotelId)\r\n    );\r\n  }\r\n);\r\n","import { IState } from './index';\r\nimport { IHiglight, IHotel } from './../../models/hotel';\r\nimport { HotelActions, HotelActionTypes, RemoveHotels } from './../actions/hotel.actions';\r\nimport {\r\n  createSelector,\r\n  MemoizedSelector,\r\n  MemoizedSelectorWithProps\r\n} from '@ngrx/store';\r\n\r\ninterface IFilterState {\r\n  text: string;\r\n  star: string[];\r\n}\r\nexport interface IHotelState {\r\n  isLoading: boolean;\r\n  data: IHotel[];\r\n  hotelsCount: number;\r\n  error: string;\r\n  filter: IFilterState;\r\n  activeHotelId: number;\r\n  selectedHotel: IHotel | null;\r\n}\r\nconst initialStarValue: string[] = ['3', '4', '5'];\r\nexport const initialState: IHotelState = {\r\n  isLoading: false,\r\n  data: [],\r\n  hotelsCount: 0,\r\n  error: '',\r\n  filter: {\r\n    text: '',\r\n    star: initialStarValue\r\n  },\r\n  selectedHotel: null,\r\n  activeHotelId: -1\r\n};\r\n\r\nexport function reducer(\r\n  state: IHotelState = initialState,\r\n  action: HotelActions\r\n): IHotelState {\r\n  switch (action.type) {\r\n    case HotelActionTypes.LoadHotels:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case HotelActionTypes.LoadHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload\r\n      };\r\n    case HotelActionTypes.LoadHotelsError:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case HotelActionTypes.LoadHotel:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case HotelActionTypes.LoadHotelSuccess:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        selectedHotel: action.payload\r\n      };\r\n    case HotelActionTypes.LoadHotelError:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case HotelActionTypes.LoadAllHotels:\r\n      return state;\r\n    case HotelActionTypes.LoadAllHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        hotelsCount: action.payload.length\r\n      };\r\n    case HotelActionTypes.LoadAllHotelsError:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case HotelActionTypes.RemoveHotels:\r\n      return state;\r\n    case HotelActionTypes.RemoveHotelsSuccess:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: state.data.filter((hotel: IHotel) => hotel.id !== action.payload)\r\n      };\r\n    case HotelActionTypes.RemoveHotelsError:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case HotelActionTypes.SetActiveHotel:\r\n      return {\r\n        ...state,\r\n        activeHotelId: action.payload\r\n      };\r\n    case HotelActionTypes.SetTextFilter:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        filter: {\r\n          ...state.filter,\r\n          text: action.payload\r\n        }\r\n      };\r\n    case HotelActionTypes.SetStarFilter:\r\n      let stars: string[] = [...state.filter.star];\r\n      if (action.payload === 'All') {\r\n        stars = stars.length < 3 ? initialStarValue : [];\r\n      } else {\r\n        if (stars.includes(action.payload)) {\r\n          stars = stars.filter((starVal: string) => starVal !== action.payload);\r\n        } else {\r\n          stars = [...stars, action.payload];\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        filter: {\r\n          ...state.filter,\r\n          star: stars\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const starSelector: MemoizedSelectorWithProps<\r\n  IState,\r\n  string,\r\n  boolean\r\n> = createSelector(\r\n  (state: IState) => state.hotel.filter.star,\r\n  (star: string[], starValue: string) => {\r\n    return star.includes(starValue);\r\n  }\r\n);\r\nexport const textSelector: MemoizedSelectorWithProps<\r\n  IState,\r\n  string,\r\n  IHiglight[]\r\n> = createSelector(\r\n  (state: IState) => state.hotel.filter.text,\r\n  (text: string, hotelText: string) => {\r\n    let dataArray: IHiglight[] = [];\r\n    const isTextNeedHighlight: boolean =\r\n      hotelText.toUpperCase().indexOf(text.toUpperCase()) > -1;\r\n    if (!text || !isTextNeedHighlight) {\r\n      dataArray = [{ text: hotelText, isHighlight: false }];\r\n    } else {\r\n      dataArray = [];\r\n      let index: number = 0;\r\n      while (index !== -1) {\r\n        const foundIndex: number = hotelText\r\n          .toUpperCase()\r\n          .indexOf(text.toUpperCase(), index);\r\n        if (foundIndex > -1) {\r\n          dataArray.push({\r\n            text: hotelText.slice(index, foundIndex),\r\n            isHighlight: false\r\n          });\r\n          dataArray.push({\r\n            text: hotelText.slice(foundIndex, foundIndex + text.length),\r\n            isHighlight: true\r\n          });\r\n          index = foundIndex + 1;\r\n        } else {\r\n          dataArray.push({\r\n            text: hotelText.slice(index + text.length - 1),\r\n            isHighlight: false\r\n          });\r\n          index = -1;\r\n        }\r\n      }\r\n    }\r\n    return dataArray;\r\n  }\r\n);\r\n\r\nexport const filteredHotelsSelector: MemoizedSelector<\r\n  IState,\r\n  IHotel[]\r\n> = createSelector(\r\n  (state: IState) => state.hotel.data,\r\n  (state: IState) => state.hotel.filter,\r\n  (hotels: IHotel[], filter: IFilterState) => {\r\n    return hotels.filter((hotel: IHotel) => {\r\n      const isStarEquals: boolean = filter.star.includes(\r\n        hotel.stars.toString()\r\n      );\r\n      const isTextEqual: boolean =\r\n        hotel.description.toUpperCase().includes(filter.text.toUpperCase()) ||\r\n        hotel.title.toUpperCase().includes(filter.text.toUpperCase());\r\n      return isStarEquals && isTextEqual;\r\n    });\r\n  }\r\n);\r\nexport const activeHotelsSelector: MemoizedSelector<\r\n  IState,\r\n  IHotel\r\n> = createSelector(\r\n  (state: IState) => state.hotel.data,\r\n  (state: IState) => state.hotel.activeHotelId,\r\n  (hotels: IHotel[], activehotelId: number) => {\r\n    return hotels.find((hotel: IHotel) => {\r\n      return hotel.id === activehotelId;\r\n    });\r\n  }\r\n);\r\n","import { IRouterStateUrl } from './custom-route-serializer';\r\nimport { IHotel } from './../../models/hotel';\r\nimport {\r\n  ActionReducer,\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  MetaReducer\r\n} from '@ngrx/store';\r\nimport { environment } from '../../../environments/environment';\r\nimport * as fromHotel from './hotel.reducer';\r\nimport * as fromFavoriteHotel from './favorite-hotel.reducer';\r\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\r\n\r\nexport interface IState {\r\n  router: RouterReducerState<IRouterStateUrl>;\r\n  hotel: fromHotel.IHotelState;\r\n  favoriteHotel: fromFavoriteHotel.IFavState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<IState> = {\r\n\r\n  hotel: fromHotel.reducer,\r\n  router: routerReducer,\r\n  favoriteHotel: fromFavoriteHotel.reducer,\r\n};\r\n\r\n\r\nexport const metaReducers: MetaReducer<IState>[] = !environment.production ? [] : [];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  configUrl: 'https://agile-retreat-51594.herokuapp.com/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}